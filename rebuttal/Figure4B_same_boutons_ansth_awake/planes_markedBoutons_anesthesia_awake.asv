clear all

newdirs_anesthesia={'160707_KS164_2P_KS\run03_ori12_V1_anesthesia',...
    '160712_KS167_2P_KS\run03_ori12_V1_anesthesia',...
    '160621_KS166_2P_KS\run03_ori12_V1_anesthetized2',...
    '170110_KS173_2P_KS\run03_ori12_V1_anesthesia',...
    '170106_KS174_2P_KS\run03_ori12_V1_anesthesia',...
    '170110_KS174_2P_KS\run03_ori12_V1_anesthesia'}

newdirs_awake={'160707_KS164_2P_KS\run03_ori12_V1_awake',...
    '160712_KS167_2P_KS\run03_ori12_V1_awake',...
    '160621_KS166_2P_KS\run03_ori12_V1_awake',...
    '170110_KS173_2P_KS\run03_ori12_V1_awake',...
    '170106_KS174_2P_KS\run03_ori12_V1',...
    '170110_KS174_2P_KS\run03_ori12_V1_awake'};

%%
filepath='G:\mousebox\analysis\';

for i=1:1

newdir_anesthesia=newdirs_anesthesia{i};
newdir_awake=newdirs_awake{i};

clear tcs_handseg_ansth
clear tcs_handseg_awake

load(fullfile(filepath,newdir_anesthesia,'tcs_handseg.mat'));
% load('G:\mousebox\analysis\160707_KS164_2P_KS\run03_ori12_V1_anesthesia\tcs_handseg.mat')
tcs_handseg_ansth=tcs_handseg;
clear tcs_handseg
% load('G:\mousebox\analysis\160707_KS164_2P_KS\run03_ori12_V1_awake\tcs_handseg.mat')
load(fullfile(filepath,newdir_awake,'tcs_handseg.mat'))
tcs_handseg_awake=tcs_handseg;
%

if isfield(tcs_handseg_ansth, 'colormap') & isfield(tcs_handseg_awake, 'colormap')
    
    % Assuming tcs_handseg.colormap and tcs_handseg.mask are your images
    figure;
    clf
    subplot('Position',[0.05, 0.2, 0.45, 0.45])
    % Display the first image
    % imshow(tcs_handseg_ansth.colormap);
    imshow(tcs_handseg_ansth.colormap(:,:,3));
    % Hold on to overlay the second image
    hold on;
    % Display the second image with transparency
    h = imshow(tcs_handseg_ansth.mask);
    set(h, 'AlphaData', 0.3); % Adjust the transparency level as needed
    % Release the hold to prevent further overlay
    hold off;
    axis square 
    title('ANESTHESIA')

    subplot('Position',[0.55, 0.2, 0.45, 0.45])
    % Display the first image
    % imagesc(tcs_handseg_awake.colormap(:,:,1));
    imshow(tcs_handseg_awake.colormap(:,:,3));
    % Hold on to overlay the second image
    hold on;
    % Display the second image with transparency
    h = imshow(tcs_handseg_awake.mask);

    set(h, 'AlphaData', 0.3); % Adjust the transparency level as needed
    % Release the hold to prevent further overlay
    hold off;
    axis square 
    title('AWAKE')

    set(gcf,'paperunits','centimeters','papersize' ,[20,20],'color','w','paperposition',[0,0,20,20],'inverthardcopy','off');
%     filepathanalysis=['G:\mousebox\code\mouselab\users\karolina\FiguresPaper2023\rebuttal\Figure4B_same_boutons_ansth_awake\']; 
%     filename=sprintf(['Figure4B_samePlane_anesthesia_Awake_',newdir_awake(1:18),'.pdf'])

    print(gcf,'-dpdf',[filepathanalysis, filename]);

else
    disp('Field ''colormap'' does not exist in tcs_handseg_awake.');
end
end
%% chose_awake_boutons=[144, 73, 244, 237]
% Load the mask
chose_awake_boutons=[144, 73, 244, 237]
mask = tcs_handseg_awake.mask; % Assuming this is your loaded mask variable

% Plot the mask
figure;
imshow(tcs_handseg_awake.colormap(:,:,3));
    % Hold on to overlay the second image
hold on;
% Display the second image with transparency
h = imshow(tcs_handseg_awake.mask);

set(h, 'AlphaData', 0.5); % Adjust the transparency level as needed
% imshow(mask);
% colormap(jet); % Optional: Use a colormap that makes it easy to differentiate ROIs
% axis equal tight; % Adjust axis for better visualization
% 
% % Hold on to plot text labels on the same figure
% hold on;

% Get unique ROI numbers (excluding zero)
% roiNumbers = unique(mask(mask > 0));
roiNumbers=chose_awake_boutons
% Loop through each ROI to label it
for i = 1:length(roiNumbers)
    % Find pixels belonging to the current ROI
    [rows, cols] = find(mask == roiNumbers(i));
    
    % Calculate the centroid of the current ROI
    centroid = regionprops(mask == roiNumbers(i), 'centroid');
    
    % Label the ROI with its number at the centroid position
    text(centroid.Centroid(1), centroid.Centroid(2), num2str(roiNumbers(i)), 'Color', 'r', 'HorizontalAlignment', 'center');
end
axis square 
% Release hold
hold off;

%%
%% chose_anesthesia_boutons=[109,34,257,256 ]
% Load the mask
chose_anesthesia_boutons=[109,32,257,242]
mask = tcs_handseg_ansth.mask; % Assuming this is your loaded mask variable

% Plot the mask
figure;
imshow(tcs_handseg_ansth.colormap(:,:,3));
    % Hold on to overlay the second image
hold on;
% Display the second image with transparency
h = imshow(tcs_handseg_ansth.mask);

set(h, 'AlphaData', 0.5); % Adjust the transparency level as needed
% imshow(mask);
% colormap(jet); % Optional: Use a colormap that makes it easy to differentiate ROIs
% axis equal tight; % Adjust axis for better visualization
% 
% % Hold on to plot text labels on the same figure
% hold on;

% Get unique ROI numbers (excluding zero)
% roiNumbers = unique(mask(mask > 0));
roiNumbers = chose_anesthesia_boutons
% Loop through each ROI to label it
for i = 1:length(roiNumbers)
    % Find pixels belonging to the current ROI
    [rows, cols] = find(mask == roiNumbers(i));
    
    % Calculate the centroid of the current ROI
    centroid = regionprops(mask == roiNumbers(i), 'centroid');
    
    % Label the ROI with its number at the centroid position
    text(centroid.Centroid(1), centroid.Centroid(2), num2str(roiNumbers(i)), 'Color', 'r', 'HorizontalAlignment', 'center');
end
axis square 
% Release hold
hold off;
%%
% Assuming your data is stored in this variable
data_ansth = tcs_handseg_ansth.avRespSurf(:,chose_anesthesia_boutons);
data_awake = tcs_handseg_ansth.avRespSurf(:,chose_awake_boutons);
yLimits = [min(data_ansth(:)), max(data_ansth(:))];

figure;
for i = 1:4
    
    subplot(4, 2, 2*i);
    plot(data_ansth(:, i),'k');
    hold on
    plot([0,0],[0,100],'-k','linewidth',3);
    hold on
    text(-500, 50, sprintf('dF/F\n100%%'), 'HorizontalAlignment', 'center','Rotation', 90);
    
    ylim(yLimits); % Apply the common y-axis limits
    
    if i == 1
        ylabel('Response'); % Add a y-axis label on the first subplot for scale
    end
    
    % Remove x-axis labels and ticks for all but the last plot
    if i < 4
        set(gca, 'XTick', [], 'XTickLabel', '');
    else
        xlabel('Time'); % Add an x-axis label on the last subplot
    end
    box off
    axis off;

    
    subplot(4, 2, 2*(i-1)+1);
    
    plot(data_awake(:, i),'r');
    hold on
    plot([0,0],[0,100],'-k','linewidth',3);
    hold on
    text(-500, 50, sprintf('dF/F\n100%%'), 'HorizontalAlignment', 'center','Rotation', 90);
    
    ylim(yLimits); % Apply the common y-axis limits
    
    if i == 1
        ylabel('Response'); % Add a y-axis label on the first subplot for scale
    end
    
    % Remove x-axis labels and ticks for all but the last plot
    if i < 4
        set(gca, 'XTick', [], 'XTickLabel', '');
    else
        xlabel('Time'); % Add an x-axis label on the last subplot
    end
    box off
    axis off;
end


%%
chose_anesthesia_boutons=[109,32,257,244]
chose_awake_boutons=[144, 73, 244, 237]
figure, 
subplot(2,1,1)
plot(tcs_handseg_ansth.avRespSurf(:,257))

subplot(2,1,2)
plot(tcs_handseg_awake.avRespSurf(:,244))

figure, 
subplot(2,1,1)
plot(tcs_handseg_ansth.avRespSurf(:,242))

subplot(2,1,2)
plot(tcs_handseg_awake.avRespSurf(:,237))
